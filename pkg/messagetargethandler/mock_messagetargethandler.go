// Code generated by MockGen. DO NOT EDIT.
// Source: main.go

// Package messagetargethandler is a generated GoMock package.
package messagetargethandler

import (
	context "context"
	reflect "reflect"

	uuid "github.com/gofrs/uuid"
	gomock "github.com/golang/mock/gomock"
	messagetarget "gitlab.com/voipbin/bin-manager/webhook-manager.git/models/messagetarget"
)

// MockMessageTargetHandler is a mock of MessageTargetHandler interface.
type MockMessageTargetHandler struct {
	ctrl     *gomock.Controller
	recorder *MockMessageTargetHandlerMockRecorder
}

// MockMessageTargetHandlerMockRecorder is the mock recorder for MockMessageTargetHandler.
type MockMessageTargetHandlerMockRecorder struct {
	mock *MockMessageTargetHandler
}

// NewMockMessageTargetHandler creates a new mock instance.
func NewMockMessageTargetHandler(ctrl *gomock.Controller) *MockMessageTargetHandler {
	mock := &MockMessageTargetHandler{ctrl: ctrl}
	mock.recorder = &MockMessageTargetHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMessageTargetHandler) EXPECT() *MockMessageTargetHandlerMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockMessageTargetHandler) Get(ctx context.Context, id uuid.UUID) (*messagetarget.MessageTarget, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", ctx, id)
	ret0, _ := ret[0].(*messagetarget.MessageTarget)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockMessageTargetHandlerMockRecorder) Get(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockMessageTargetHandler)(nil).Get), ctx, id)
}

// Update mocks base method.
func (m_2 *MockMessageTargetHandler) Update(ctx context.Context, m *messagetarget.MessageTarget) error {
	m_2.ctrl.T.Helper()
	ret := m_2.ctrl.Call(m_2, "Update", ctx, m)
	ret0, _ := ret[0].(error)
	return ret0
}

// Update indicates an expected call of Update.
func (mr *MockMessageTargetHandlerMockRecorder) Update(ctx, m interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockMessageTargetHandler)(nil).Update), ctx, m)
}
