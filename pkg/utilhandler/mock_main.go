// Code generated by MockGen. DO NOT EDIT.
// Source: main.go

// Package utilhandler is a generated GoMock package.
package utilhandler

import (
	reflect "reflect"
	time "time"

	uuid "github.com/gofrs/uuid"
	gomock "github.com/golang/mock/gomock"
)

// MockUtilHandler is a mock of UtilHandler interface.
type MockUtilHandler struct {
	ctrl     *gomock.Controller
	recorder *MockUtilHandlerMockRecorder
}

// MockUtilHandlerMockRecorder is the mock recorder for MockUtilHandler.
type MockUtilHandlerMockRecorder struct {
	mock *MockUtilHandler
}

// NewMockUtilHandler creates a new mock instance.
func NewMockUtilHandler(ctrl *gomock.Controller) *MockUtilHandler {
	mock := &MockUtilHandler{ctrl: ctrl}
	mock.recorder = &MockUtilHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUtilHandler) EXPECT() *MockUtilHandlerMockRecorder {
	return m.recorder
}

// CreateUUID mocks base method.
func (m *MockUtilHandler) CreateUUID() uuid.UUID {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateUUID")
	ret0, _ := ret[0].(uuid.UUID)
	return ret0
}

// CreateUUID indicates an expected call of CreateUUID.
func (mr *MockUtilHandlerMockRecorder) CreateUUID() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateUUID", reflect.TypeOf((*MockUtilHandler)(nil).CreateUUID))
}

// GetCurTime mocks base method.
func (m *MockUtilHandler) GetCurTime() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCurTime")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetCurTime indicates an expected call of GetCurTime.
func (mr *MockUtilHandlerMockRecorder) GetCurTime() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCurTime", reflect.TypeOf((*MockUtilHandler)(nil).GetCurTime))
}

// GetCurTimeAdd mocks base method.
func (m *MockUtilHandler) GetCurTimeAdd(duration time.Duration) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCurTimeAdd", duration)
	ret0, _ := ret[0].(string)
	return ret0
}

// GetCurTimeAdd indicates an expected call of GetCurTimeAdd.
func (mr *MockUtilHandlerMockRecorder) GetCurTimeAdd(duration interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCurTimeAdd", reflect.TypeOf((*MockUtilHandler)(nil).GetCurTimeAdd), duration)
}

// GetCurTimeRFC3339 mocks base method.
func (m *MockUtilHandler) GetCurTimeRFC3339() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCurTimeRFC3339")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetCurTimeRFC3339 indicates an expected call of GetCurTimeRFC3339.
func (mr *MockUtilHandlerMockRecorder) GetCurTimeRFC3339() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCurTimeRFC3339", reflect.TypeOf((*MockUtilHandler)(nil).GetCurTimeRFC3339))
}
