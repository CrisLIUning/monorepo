// Code generated by MockGen. DO NOT EDIT.
// Source: main.go

// Package rtphandler is a generated GoMock package.
package rtphandler

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockRTPHandler is a mock of RTPHandler interface.
type MockRTPHandler struct {
	ctrl     *gomock.Controller
	recorder *MockRTPHandlerMockRecorder
}

// MockRTPHandlerMockRecorder is the mock recorder for MockRTPHandler.
type MockRTPHandlerMockRecorder struct {
	mock *MockRTPHandler
}

// NewMockRTPHandler creates a new mock instance.
func NewMockRTPHandler(ctrl *gomock.Controller) *MockRTPHandler {
	mock := &MockRTPHandler{ctrl: ctrl}
	mock.recorder = &MockRTPHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRTPHandler) EXPECT() *MockRTPHandlerMockRecorder {
	return m.recorder
}

// Serve mocks base method.
func (m *MockRTPHandler) Serve() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Serve")
}

// Serve indicates an expected call of Serve.
func (mr *MockRTPHandlerMockRecorder) Serve() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Serve", reflect.TypeOf((*MockRTPHandler)(nil).Serve))
}
