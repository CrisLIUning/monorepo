// Code generated by MockGen. DO NOT EDIT.
// Source: ./main.go

// Package notifyhandler is a generated GoMock package.
package notifyhandler

import (
	gomock "github.com/golang/mock/gomock"
	call "gitlab.com/voipbin/bin-manager/call-manager.git/models/call"
	reflect "reflect"
)

// MockNotifyHandler is a mock of NotifyHandler interface
type MockNotifyHandler struct {
	ctrl     *gomock.Controller
	recorder *MockNotifyHandlerMockRecorder
}

// MockNotifyHandlerMockRecorder is the mock recorder for MockNotifyHandler
type MockNotifyHandlerMockRecorder struct {
	mock *MockNotifyHandler
}

// NewMockNotifyHandler creates a new mock instance
func NewMockNotifyHandler(ctrl *gomock.Controller) *MockNotifyHandler {
	mock := &MockNotifyHandler{ctrl: ctrl}
	mock.recorder = &MockNotifyHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockNotifyHandler) EXPECT() *MockNotifyHandlerMockRecorder {
	return m.recorder
}

// CallCreate mocks base method
func (m *MockNotifyHandler) CallCreate(c *call.Call) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "CallCreate", c)
}

// CallCreate indicates an expected call of CallCreate
func (mr *MockNotifyHandlerMockRecorder) CallCreate(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CallCreate", reflect.TypeOf((*MockNotifyHandler)(nil).CallCreate), c)
}
