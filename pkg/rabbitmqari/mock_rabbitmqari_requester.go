// Code generated by MockGen. DO NOT EDIT.
// Source: gitlab.com/voipbin/bin-manager/call-manager/pkg/rabbitmqari (interfaces: Requester)

// Package rabbitmqari is a generated GoMock package.
package rabbitmqari

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockRequester is a mock of Requester interface
type MockRequester struct {
	ctrl     *gomock.Controller
	recorder *MockRequesterMockRecorder
}

// MockRequesterMockRecorder is the mock recorder for MockRequester
type MockRequesterMockRecorder struct {
	mock *MockRequester
}

// NewMockRequester creates a new mock instance
func NewMockRequester(ctrl *gomock.Controller) *MockRequester {
	mock := &MockRequester{ctrl: ctrl}
	mock.recorder = &MockRequesterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockRequester) EXPECT() *MockRequesterMockRecorder {
	return m.recorder
}

// SendARIRequest mocks base method
func (m *MockRequester) SendARIRequest(arg0, arg1, arg2 string, arg3 int64, arg4, arg5 string) (Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SendARIRequest", arg0, arg1, arg2, arg3, arg4, arg5)
	ret0, _ := ret[0].(Response)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SendARIRequest indicates an expected call of SendARIRequest
func (mr *MockRequesterMockRecorder) SendARIRequest(arg0, arg1, arg2, arg3, arg4, arg5 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendARIRequest", reflect.TypeOf((*MockRequester)(nil).SendARIRequest), arg0, arg1, arg2, arg3, arg4, arg5)
}
