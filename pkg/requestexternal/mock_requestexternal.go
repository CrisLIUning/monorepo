// Code generated by MockGen. DO NOT EDIT.
// Source: main.go

// Package requestexternal is a generated GoMock package.
package requestexternal

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	telnyx "gitlab.com/voipbin/bin-manager/number-manager.git/pkg/requestexternal/models/telnyx"
)

// MockRequestExternal is a mock of RequestExternal interface.
type MockRequestExternal struct {
	ctrl     *gomock.Controller
	recorder *MockRequestExternalMockRecorder
}

// MockRequestExternalMockRecorder is the mock recorder for MockRequestExternal.
type MockRequestExternalMockRecorder struct {
	mock *MockRequestExternal
}

// NewMockRequestExternal creates a new mock instance.
func NewMockRequestExternal(ctrl *gomock.Controller) *MockRequestExternal {
	mock := &MockRequestExternal{ctrl: ctrl}
	mock.recorder = &MockRequestExternalMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRequestExternal) EXPECT() *MockRequestExternalMockRecorder {
	return m.recorder
}

// TelnyxAvailableNumberGets mocks base method.
func (m *MockRequestExternal) TelnyxAvailableNumberGets(countryCode, locality, administrativeArea string, limit uint) ([]*telnyx.AvailableNumber, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TelnyxAvailableNumberGets", countryCode, locality, administrativeArea, limit)
	ret0, _ := ret[0].([]*telnyx.AvailableNumber)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// TelnyxAvailableNumberGets indicates an expected call of TelnyxAvailableNumberGets.
func (mr *MockRequestExternalMockRecorder) TelnyxAvailableNumberGets(countryCode, locality, administrativeArea, limit interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TelnyxAvailableNumberGets", reflect.TypeOf((*MockRequestExternal)(nil).TelnyxAvailableNumberGets), countryCode, locality, administrativeArea, limit)
}

// TelnyxNumberOrdersPost mocks base method.
func (m *MockRequestExternal) TelnyxNumberOrdersPost(numbers []string) (*telnyx.OrderNumber, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TelnyxNumberOrdersPost", numbers)
	ret0, _ := ret[0].(*telnyx.OrderNumber)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// TelnyxNumberOrdersPost indicates an expected call of TelnyxNumberOrdersPost.
func (mr *MockRequestExternalMockRecorder) TelnyxNumberOrdersPost(numbers interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TelnyxNumberOrdersPost", reflect.TypeOf((*MockRequestExternal)(nil).TelnyxNumberOrdersPost), numbers)
}

// TelnyxPhoneNumbersGet mocks base method.
func (m *MockRequestExternal) TelnyxPhoneNumbersGet(size uint, tag, number string) ([]*telnyx.PhoneNumber, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TelnyxPhoneNumbersGet", size, tag, number)
	ret0, _ := ret[0].([]*telnyx.PhoneNumber)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// TelnyxPhoneNumbersGet indicates an expected call of TelnyxPhoneNumbersGet.
func (mr *MockRequestExternalMockRecorder) TelnyxPhoneNumbersGet(size, tag, number interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TelnyxPhoneNumbersGet", reflect.TypeOf((*MockRequestExternal)(nil).TelnyxPhoneNumbersGet), size, tag, number)
}

// TelnyxPhoneNumbersIDDelete mocks base method.
func (m *MockRequestExternal) TelnyxPhoneNumbersIDDelete(id string) (*telnyx.PhoneNumber, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TelnyxPhoneNumbersIDDelete", id)
	ret0, _ := ret[0].(*telnyx.PhoneNumber)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// TelnyxPhoneNumbersIDDelete indicates an expected call of TelnyxPhoneNumbersIDDelete.
func (mr *MockRequestExternalMockRecorder) TelnyxPhoneNumbersIDDelete(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TelnyxPhoneNumbersIDDelete", reflect.TypeOf((*MockRequestExternal)(nil).TelnyxPhoneNumbersIDDelete), id)
}

// TelnyxPhoneNumbersIDGet mocks base method.
func (m *MockRequestExternal) TelnyxPhoneNumbersIDGet(id string) (*telnyx.PhoneNumber, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TelnyxPhoneNumbersIDGet", id)
	ret0, _ := ret[0].(*telnyx.PhoneNumber)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// TelnyxPhoneNumbersIDGet indicates an expected call of TelnyxPhoneNumbersIDGet.
func (mr *MockRequestExternalMockRecorder) TelnyxPhoneNumbersIDGet(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TelnyxPhoneNumbersIDGet", reflect.TypeOf((*MockRequestExternal)(nil).TelnyxPhoneNumbersIDGet), id)
}

// TelnyxPhoneNumbersIDUpdateConnectionID mocks base method.
func (m *MockRequestExternal) TelnyxPhoneNumbersIDUpdateConnectionID(id, connectionID string) (*telnyx.PhoneNumber, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TelnyxPhoneNumbersIDUpdateConnectionID", id, connectionID)
	ret0, _ := ret[0].(*telnyx.PhoneNumber)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// TelnyxPhoneNumbersIDUpdateConnectionID indicates an expected call of TelnyxPhoneNumbersIDUpdateConnectionID.
func (mr *MockRequestExternalMockRecorder) TelnyxPhoneNumbersIDUpdateConnectionID(id, connectionID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TelnyxPhoneNumbersIDUpdateConnectionID", reflect.TypeOf((*MockRequestExternal)(nil).TelnyxPhoneNumbersIDUpdateConnectionID), id, connectionID)
}
