// Code generated by MockGen. DO NOT EDIT.
// Source: main.go

// Package webhookhandler is a generated GoMock package.
package webhookhandler

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	webhook "gitlab.com/voipbin/bin-manager/webhook-manager.git/models/webhook"
)

// MockWebhookHandler is a mock of WebhookHandler interface.
type MockWebhookHandler struct {
	ctrl     *gomock.Controller
	recorder *MockWebhookHandlerMockRecorder
}

// MockWebhookHandlerMockRecorder is the mock recorder for MockWebhookHandler.
type MockWebhookHandlerMockRecorder struct {
	mock *MockWebhookHandler
}

// NewMockWebhookHandler creates a new mock instance.
func NewMockWebhookHandler(ctrl *gomock.Controller) *MockWebhookHandler {
	mock := &MockWebhookHandler{ctrl: ctrl}
	mock.recorder = &MockWebhookHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWebhookHandler) EXPECT() *MockWebhookHandlerMockRecorder {
	return m.recorder
}

// SendWebhook mocks base method.
func (m *MockWebhookHandler) SendWebhook(wh *webhook.Webhook) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SendWebhook", wh)
	ret0, _ := ret[0].(error)
	return ret0
}

// SendWebhook indicates an expected call of SendWebhook.
func (mr *MockWebhookHandlerMockRecorder) SendWebhook(wh interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendWebhook", reflect.TypeOf((*MockWebhookHandler)(nil).SendWebhook), wh)
}
