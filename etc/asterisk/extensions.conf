; NOTICE

; VB-X variables
; VB-X variables are for channels table.
; all keys are must be upper case.
; --------------------------------------
; VB-CONTEXT_TYPE: Channel's context type. call/conf (conf sets by call-manager)
; VB-DIRECTION: Channel's direction. incoming/outgoing.
; VB-SIP_CALLID: SIP's call id.
; VB-SIP_PAI: SIP's P-Asserted-Identity header info.
; VB-SIP_PRIVACY: SIP's Privacy header info.


; stasis contexts
; stasis contexts are for the calls table.
; all key and value are must be lower case.
; ----------------------------------------
; conf-in: stasis context for incoming conference.


; stasis variables
; stasis variables are will be used for calls table.
; all keys are must be lower case.
; --------------------------------------------------
; context: Requested domain name. Sets by kamailio. sip-service.voipbin.net, ...

[general]
static=yes
writeprotect=no
clearglobalvars=no

[globals]
CONSOLE=Console/dsp   ; Console interface for demo
IAXINFO=guest         ; IAXtel username/password
TRUNK=DAHDI/G2        ; Trunk interface
TRUNKMSD=1            ; MSD digits to strip (usually 1 or 0)

; conference incoming handler
[conf-in]
exten => _[+0-9a-zA-Z].,1,NoOp(conf-in)
 same => n,Set(VB-CONTEXT_TYPE=conf)
 same => n,Set(VB-DIRECTION=incoming) ; set variable for direction. incoming/outgoing
 same => n,Set(VB-SIP_CALLID=${PJSIP_HEADER(read,Call-ID)}) ; set variable for sip call-id.
 same => n,Set(VB-SIP_PAI=${PJSIP_HEADER(read,P-Asserted-Identity)})
 same => n,Set(VB-SIP_PRIVACY=${PJSIP_HEADER(read,Privacy)})
 same => n,Stasis(voipbin,context=conf-in,call_id=${PJSIP_HEADER(read,VB-CALL-ID)},confbridge_id=${PJSIP_HEADER(read,VB-CONFBRIDGE-ID)},conference_id=${PJSIP_HEADER(read,VB-CONFERENCE-ID)})
 same => n,Hangup()

; conference outgoing handler
[conf-out]
exten => _[+0-9a-zA-Z].,1,NoOp(conf-out)
 same => n,Hangup()

; test
[test]
exten => _[+0-9a-zA-Z].,1,NoOp(test)
 same => n,Set(TIMEOUT(absolute)=600)
 same => n,Stasis(test)
